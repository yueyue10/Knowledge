docker常用命令

1 拉取docker镜像
docker pull image_name[镜像名称]

2 查看宿主机上的镜像：
docker images

3 删除镜像
docker rmi docker.io/tomcat:7.0.77-jre7   或者  docker rmi b39c68b7af30

4 查看当前哪些容器正在运行

docker ps

5 查看所有容器
docker ps -a

6 启动 停止 重启容器命令

docker start container_name/container_id
docker stop container_name/container_id
docker restart container_name/container_id


7 后台启动一个容器，如果想要进入这个容器，可以使用attach命令：
docker attach container_name/container_id

8 删除容器的命令
docker rm container_name/container_id

9 删除所有停止的容器：
docker rm $(docker ps -a -q)

10查看当前系统Docker信息
docker info

11 从Docker hub上下载某个镜像:

docker pull centos:latest
docker pull centos:latest

执行docker pull centos会将Centos这个仓库下面的所有镜像下载到本地repository。


12 查找Docker Hub上的nginx镜像

docker search nginx

13 修改容器内容
docker exec -it xx bash




Docker Compose 常用命令

1 使用docker-compose up -d在后台启动服务

2 使用docker-compose ps命令查看启动的服务

3 使用docker-compose stop停止服务。

#查看帮助
docker-compose -h

# -f  指定使用的 Compose 模板文件，默认为 docker-compose.yml，可以多次指定。
docker-compose -f docker-compose.yml up -d

#启动所有容器，-d 将会在后台启动并运行所有的容器
docker-compose up -d

#停用移除所有容器以及网络相关
docker-compose down

#查看服务容器的输出
docker-compose logs

#列出项目中目前的所有容器
docker-compose ps

#构建（重新构建）项目中的服务容器。服务容器一旦构建后，将会带上一个标记名，例如对于 web 项目中的一个 db 容器，可能是 web_db。可以随时在项目目录下运行 docker-compose build 来重新构建服务
docker-compose build

#拉取服务依赖的镜像
docker-compose pull

#重启项目中的服务
docker-compose restart

#删除所有（停止状态的）服务容器。推荐先执行 docker-compose stop 命令来停止容器。
docker-compose rm

#在指定服务上执行一个命令。
docker-compose run ubuntu ping docker.com

#设置指定服务运行的容器个数。通过 service=num 的参数来设置数量
docker-compose scale web=3 db=2

#启动已经存在的服务容器。
docker-compose start

#停止已经处于运行状态的容器，但不删除它。通过 docker-compose start 可以再次启动这些容器。
docker-compose stop
